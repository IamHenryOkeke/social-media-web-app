generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  name         String    @db.VarChar(255)
  username     String    @db.VarChar(255)
  email        String    @unique
  createdAt    DateTime  @default(now())
  emailVerifed Boolean   @default(false)
  password     String
  image        String?
  bio          String?
  posts        Post[]
  comments     Comment[]
  Like         Like[]
  followers    Follow[]  @relation("followers")
  following    Follow[]  @relation("following")
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Post {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  content   String    @db.VarChar(280)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Follow {
  id          String   @id @default(cuid())
  follower    User     @relation("following", fields: [followerId], references: [id])
  followerId  String
  following   User     @relation("followers", fields: [followingId], references: [id])
  followingId String
  createdAt   DateTime @default(now())
}
